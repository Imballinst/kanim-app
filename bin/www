// Import modules
const http = require('http');
const { CronJob } = require('cron');
const addMonths = require('date-fns/addMonths');
const format = require('date-fns/format');

// Environment settings
const app = require('../app');
const { SERVER_PORT } = require('../config/env');
const { winstonInfo } = require('../lib/logging');
const {
  getCookieAndToken,
  getFilteredOffices,
  checkAvailabilities,
} = require('../lib/processor');
const { getDatabaseConnection, closeDBConnection } = require('../lib/mongo');

// Routes
const initRoutes = require('../routes');

// Server and Port
const server = new http.Server(app);
const portApp = SERVER_PORT || 8000;

server.listen(portApp, () => {
  winstonInfo(`Listening on port ${portApp}!`);

  // Main
  let cookie;
  let token;
  let client;
  let db;

  const processAvailabilities = nameFilter => getCookieAndToken()
    .then(({ cookie: serverCookie, token: serverToken }) => {
      cookie = serverCookie;
      token = serverToken;

      return getFilteredOffices(cookie, nameFilter);
    })
    .then((offices) => {
      const startDate = new Date();
      const endDate = addMonths(startDate, 1);
      const dates = {
        startDate: format(startDate, 'YYYY-M-D'),
        endDate: format(endDate, 'YYYY-M-D'),
      };

      return checkAvailabilities(db, cookie, token, offices, dates);
    });

  // Main application
  getDatabaseConnection()
    .then(({ mongoClient, clientDb }) => {
      client = mongoClient;
      db = clientDb;

      app.locals.db = db;
      initRoutes(app);
    })
    .then(() => {
      const job = new CronJob(
        '0 0-59/4 * * * *',
        () => processAvailabilities(''),
        () => closeDBConnection(client),
        true,
        'Asia/Jakarta'
      );
    });
});
